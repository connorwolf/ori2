{"version":3,"file":"PluginManager.js","sourceRoot":"","sources":["../../app/plugins/PluginManager.ts"],"names":[],"mappings":";;;;;;;;;;AAAA,2CAAwC;AAGxC,6CAA0C;AAE1C,MAAa,aAAa;IAGzB,YAAY,GAAkB;QAC7B,IAAI,CAAC,GAAG,GAAG,GAAG,CAAC;QACf,IAAI,CAAC,WAAW,GAAG,IAAI,uBAAU,EAAE,CAAC;IACrC,CAAC;IACM,KAAK,CAAC,MAAkB;QAC9B,IAAI,CAAC,GAAG,CAAC,MAAM,CAAC,IAAI,CAAC,oCAAoC,MAAM,CAAC,OAAO,CAAC,IAAI,MAAM,CAAC,CAAC;QACpF,IAAI,CAAC,WAAW,CAAC,GAAG,CAAC,MAAM,CAAC,OAAO,CAAC,IAAI,EAAE,IAAI,uBAAU,CAAC,IAAI,CAAC,GAAG,EAAE,MAAM,CAAC,CAAC,CAAC;IAC7E,CAAC;IACY,IAAI,CAAC,MAAkB;;YACnC,IAAI,CAAC,GAAG,CAAC,MAAM,CAAC,IAAI,CAAC,mBAAmB,MAAM,CAAC,OAAO,CAAC,IAAI,MAAM,CAAC,CAAC;YACnE,MAAM,MAAM,CAAC,KAAK,EAAE,CAAC;QACtB,CAAC;KAAA;IACY,sBAAsB;;YAClC,IAAI,CAAC,GAAG,CAAC,MAAM,CAAC,IAAI,CAAC,gCAAgC,CAAC,CAAC;YACvD,IAAI,CAAC,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC,IAAI,EAAE,EAAE;gBACxC,MAAM,UAAU,GAAQ,OAAO,CAAC,KAAK,IAAI,EAAE,CAAC,CAAC;gBAC7C,IAAI;oBACH,OAAO,CAAC,GAAG,CAAC,IAAI,UAAU,CAAC,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC;iBAC7C;gBAAC,OAAO,GAAG,EAAE;oBACb,IAAI,CAAC,GAAG,CAAC,MAAM,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;iBAC3B;YACF,CAAC,CAAC,CAAC;QACJ,CAAC;KAAA;CACD;AA1BD,sCA0BC","sourcesContent":["import { Collection } from \"discord.js\";\nimport { KrystalClient } from \"../KrystalClient\";\nimport { BasePlugin } from \"./BasePlugin\";\nimport { PluginHost } from \"./PluginHost\";\n\nexport class PluginManager {\n\tpublic bot: KrystalClient;\n\tpublic pluginHosts: Collection<string, PluginHost>;\n\tconstructor(bot: KrystalClient) {\n\t\tthis.bot = bot;\n\t\tthis.pluginHosts = new Collection();\n\t}\n\tpublic spawn(plugin: BasePlugin) {\n\t\tthis.bot.logger.info(`Spawning plugin host for plugin \"${plugin.options.name}\"...`);\n\t\tthis.pluginHosts.set(plugin.options.name, new PluginHost(this.bot, plugin));\n\t}\n\tpublic async load(plugin: BasePlugin) {\n\t\tthis.bot.logger.info(`Loading plugin \"${plugin.options.name}\"...`);\n\t\tawait plugin.start();\n\t}\n\tpublic async startConfiguredPlugins() {\n\t\tthis.bot.logger.info(\"Spawning configured plugins...\");\n\t\tthis.bot.config.bot.plugins.map((path) => {\n\t\t\tconst pluginFile: any = require(`./${path}`);\n\t\t\ttry {\n\t\t\t\tconsole.log(new pluginFile.Plugin(this.bot));\n\t\t\t} catch (err) {\n\t\t\t\tthis.bot.logger.error(err);\n\t\t\t}\n\t\t});\n\t}\n}"]}